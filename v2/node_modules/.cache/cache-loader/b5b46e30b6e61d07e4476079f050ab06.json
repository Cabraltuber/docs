{"remainingRequest":"/mnt/PhpstormProjects/cloudpanel-docs/v1/node_modules/babel-loader/lib/index.js??ref--11-1!/mnt/PhpstormProjects/cloudpanel-docs/v1/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/mnt/PhpstormProjects/cloudpanel-docs/v1/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/mnt/PhpstormProjects/cloudpanel-docs/v1/docs/applications/nodejs.md","dependencies":[{"path":"/mnt/PhpstormProjects/cloudpanel-docs/v1/docs/applications/nodejs.md","mtime":1637832464999},{"path":"/mnt/PhpstormProjects/cloudpanel-docs/v1/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-applications-nodejs-md-997.json","mtime":1637919651364},{"path":"/mnt/PhpstormProjects/cloudpanel-docs/v1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/PhpstormProjects/cloudpanel-docs/v1/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/mnt/PhpstormProjects/cloudpanel-docs/v1/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":499162500000},{"path":"/mnt/PhpstormProjects/cloudpanel-docs/v1/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}