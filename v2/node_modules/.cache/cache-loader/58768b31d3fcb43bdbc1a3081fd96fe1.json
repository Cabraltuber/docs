{"remainingRequest":"/mnt/PhpstormProjects/cloudpanel-docs/v2/node_modules/babel-loader/lib/index.js??ref--7-1!/mnt/PhpstormProjects/cloudpanel-docs/v2/node_modules/docusaurus-lunr-search/src/theme/SearchBar/lib/utils.js","dependencies":[{"path":"/mnt/PhpstormProjects/cloudpanel-docs/v2/node_modules/docusaurus-lunr-search/src/theme/SearchBar/lib/utils.js","mtime":1638263942609},{"path":"/mnt/PhpstormProjects/cloudpanel-docs/v2/node_modules/cache-loader/dist/cjs.js","mtime":1638263951602},{"path":"/mnt/PhpstormProjects/cloudpanel-docs/v2/node_modules/babel-loader/lib/index.js","mtime":1638263969174}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/mnt/PhpstormProjects/cloudpanel-docs/v2/node_modules/docusaurus-lunr-search/src/theme/SearchBar/lib/utils.js"],"names":["$","utils","mergeKeyWithParent","object","property","undefined","newObject","extend","groupBy","collection","newCollection","each","index","item","Error","key","toLowerCase","Object","prototype","hasOwnProperty","call","push","values","keys","map","flatten","array","results","forEach","value","Array","isArray","subvalue","flattenAndFlagFirst","flag","compact","getHighlightedValue","_highlightResult","hierarchy_camel","matchLevel","getSnippetedValue","_snippetResult","snippet","toUpperCase","indexOf","length","deepClone","JSON","parse","stringify"],"mappings":"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","sourcesContent":["import $ from \"autocomplete.js/zepto\";\n\nconst utils = {\n  /*\n  * Move the content of an object key one level higher.\n  * eg.\n  * {\n  *   name: 'My name',\n  *   hierarchy: {\n  *     lvl0: 'Foo',\n  *     lvl1: 'Bar'\n  *   }\n  * }\n  * Will be converted to\n  * {\n  *   name: 'My name',\n  *   lvl0: 'Foo',\n  *   lvl1: 'Bar'\n  * }\n  * @param {Object} object Main object\n  * @param {String} property Main object key to move up\n  * @return {Object}\n  * @throws Error when key is not an attribute of Object or is not an object itself\n  */\n  mergeKeyWithParent(object, property) {\n    if (object[property] === undefined) {\n      return object;\n    }\n    if (typeof object[property] !== 'object') {\n      return object;\n    }\n    const newObject = $.extend({}, object, object[property]);\n    delete newObject[property];\n    return newObject;\n  },\n  /*\n  * Group all objects of a collection by the value of the specified attribute\n  * If the attribute is a string, use the lowercase form.\n  *\n  * eg.\n  * groupBy([\n  *   {name: 'Tim', category: 'dev'},\n  *   {name: 'Vincent', category: 'dev'},\n  *   {name: 'Ben', category: 'sales'},\n  *   {name: 'Jeremy', category: 'sales'},\n  *   {name: 'AlexS', category: 'dev'},\n  *   {name: 'AlexK', category: 'sales'}\n  * ], 'category');\n  * =>\n  * {\n  *   'devs': [\n  *     {name: 'Tim', category: 'dev'},\n  *     {name: 'Vincent', category: 'dev'},\n  *     {name: 'AlexS', category: 'dev'}\n  *   ],\n  *   'sales': [\n  *     {name: 'Ben', category: 'sales'},\n  *     {name: 'Jeremy', category: 'sales'},\n  *     {name: 'AlexK', category: 'sales'}\n  *   ]\n  * }\n  * @param {array} collection Array of objects to group\n  * @param {String} property The attribute on which apply the grouping\n  * @return {array}\n  * @throws Error when one of the element does not have the specified property\n  */\n  groupBy(collection, property) {\n    const newCollection = {};\n    $.each(collection, (index, item) => {\n      if (item[property] === undefined) {\n        throw new Error(`[groupBy]: Object has no key ${property}`);\n      }\n      let key = item[property];\n      if (typeof key === 'string') {\n        key = key.toLowerCase();\n      }\n      // fix #171 the given data type of docsearch hits might be conflict with the properties of the native Object,\n      // such as the constructor, so we need to do this check.\n      if (!Object.prototype.hasOwnProperty.call(newCollection, key)) {\n        newCollection[key] = [];\n      }\n      newCollection[key].push(item);\n    });\n    return newCollection;\n  },\n  /*\n  * Return an array of all the values of the specified object\n  * eg.\n  * values({\n  *   foo: 42,\n  *   bar: true,\n  *   baz: 'yep'\n  * })\n  * =>\n  * [42, true, yep]\n  * @param {object} object Object to extract values from\n  * @return {array}\n  */\n  values(object) {\n    return Object.keys(object).map(key => object[key]);\n  },\n  /*\n  * Flattens an array\n  * eg.\n  * flatten([1, 2, [3, 4], [5, 6]])\n  * =>\n  * [1, 2, 3, 4, 5, 6]\n  * @param {array} array Array to flatten\n  * @return {array}\n  */\n  flatten(array) {\n    const results = [];\n    array.forEach(value => {\n      if (!Array.isArray(value)) {\n        results.push(value);\n        return;\n      }\n      value.forEach(subvalue => {\n        results.push(subvalue);\n      });\n    });\n    return results;\n  },\n  /*\n  * Flatten all values of an object into an array, marking each first element of\n  * each group with a specific flag\n  * eg.\n  * flattenAndFlagFirst({\n  *   'devs': [\n  *     {name: 'Tim', category: 'dev'},\n  *     {name: 'Vincent', category: 'dev'},\n  *     {name: 'AlexS', category: 'dev'}\n  *   ],\n  *   'sales': [\n  *     {name: 'Ben', category: 'sales'},\n  *     {name: 'Jeremy', category: 'sales'},\n  *     {name: 'AlexK', category: 'sales'}\n  *   ]\n  * , 'isTop');\n  * =>\n  * [\n  *     {name: 'Tim', category: 'dev', isTop: true},\n  *     {name: 'Vincent', category: 'dev', isTop: false},\n  *     {name: 'AlexS', category: 'dev', isTop: false},\n  *     {name: 'Ben', category: 'sales', isTop: true},\n  *     {name: 'Jeremy', category: 'sales', isTop: false},\n  *     {name: 'AlexK', category: 'sales', isTop: false}\n  * ]\n  * @param {object} object Object to flatten\n  * @param {string} flag Flag to set to true on first element of each group\n  * @return {array}\n  */\n  flattenAndFlagFirst(object, flag) {\n    const values = this.values(object).map(collection =>\n      collection.map((item, index) => {\n        // eslint-disable-next-line no-param-reassign\n        item[flag] = index === 0;\n        return item;\n      })\n    );\n    return this.flatten(values);\n  },\n  /*\n  * Removes all empty strings, null, false and undefined elements array\n  * eg.\n  * compact([42, false, null, undefined, '', [], 'foo']);\n  * =>\n  * [42, [], 'foo']\n  * @param {array} array Array to compact\n  * @return {array}\n  */\n  compact(array) {\n    const results = [];\n    array.forEach(value => {\n      if (!value) {\n        return;\n      }\n      results.push(value);\n    });\n    return results;\n  },\n  /*\n   * Returns the highlighted value of the specified key in the specified object.\n   * If no highlighted value is available, will return the key value directly\n   * eg.\n   * getHighlightedValue({\n   *    _highlightResult: {\n   *      text: {\n   *        value: '<mark>foo</mark>'\n   *      }\n   *    },\n   *    text: 'foo'\n   * }, 'text');\n   * =>\n   * '<mark>foo</mark>'\n   * @param {object} object Hit object returned by the Algolia API\n   * @param {string} property Object key to look for\n   * @return {string}\n   **/\n  getHighlightedValue(object, property) {\n    if (\n      object._highlightResult &&\n      object._highlightResult.hierarchy_camel &&\n      object._highlightResult.hierarchy_camel[property] &&\n      object._highlightResult.hierarchy_camel[property].matchLevel &&\n      object._highlightResult.hierarchy_camel[property].matchLevel !== 'none' &&\n      object._highlightResult.hierarchy_camel[property].value\n    ) {\n      return object._highlightResult.hierarchy_camel[property].value;\n    }\n    if (\n      object._highlightResult &&\n      object._highlightResult &&\n      object._highlightResult[property] &&\n      object._highlightResult[property].value\n    ) {\n      return object._highlightResult[property].value;\n    }\n    return object[property];\n  },\n  /*\n   * Returns the snippeted value of the specified key in the specified object.\n   * If no highlighted value is available, will return the key value directly.\n   * Will add starting and ending ellipsis (…) if we detect that a sentence is\n   * incomplete\n   * eg.\n   * getSnippetedValue({\n   *    _snippetResult: {\n   *      text: {\n   *        value: '<mark>This is an unfinished sentence</mark>'\n   *      }\n   *    },\n   *    text: 'This is an unfinished sentence'\n   * }, 'text');\n   * =>\n   * '<mark>This is an unfinished sentence</mark>…'\n   * @param {object} object Hit object returned by the Algolia API\n   * @param {string} property Object key to look for\n   * @return {string}\n   **/\n  getSnippetedValue(object, property) {\n    if (\n      !object._snippetResult ||\n      !object._snippetResult[property] ||\n      !object._snippetResult[property].value\n    ) {\n      return object[property];\n    }\n    let snippet = object._snippetResult[property].value;\n\n    if (snippet[0] !== snippet[0].toUpperCase()) {\n      snippet = `…${snippet}`;\n    }\n    if (['.', '!', '?'].indexOf(snippet[snippet.length - 1]) === -1) {\n      snippet = `${snippet}…`;\n    }\n    return snippet;\n  },\n  /*\n  * Deep clone an object.\n  * Note: This will not clone functions and dates\n  * @param {object} object Object to clone\n  * @return {object}\n  */\n  deepClone(object) {\n    return JSON.parse(JSON.stringify(object));\n  },\n};\n\nexport default utils;\n"]}]}