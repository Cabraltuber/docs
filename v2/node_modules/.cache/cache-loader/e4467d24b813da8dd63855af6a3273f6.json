{"remainingRequest":"/mnt/PhpstormProjects/cloudpanel-docs/v1/node_modules/babel-loader/lib/index.js??ref--7-1!/mnt/PhpstormProjects/cloudpanel-docs/v1/node_modules/docusaurus-lunr-search/src/theme/SearchBar/lib/utils.js","dependencies":[{"path":"/mnt/PhpstormProjects/cloudpanel-docs/v1/node_modules/docusaurus-lunr-search/src/theme/SearchBar/lib/utils.js","mtime":499162500000},{"path":"/mnt/PhpstormProjects/cloudpanel-docs/v1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/PhpstormProjects/cloudpanel-docs/v1/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}